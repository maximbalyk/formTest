{"version":3,"sources":["App.tsx","index.tsx"],"names":["renderError","errorMessage","className","App","pass","useState","email","setEmail","password","setPassword","passwordConfirm","setPasswordConfirm","login","setLogin","hidePassword","setHidePassword","isEmailValid","test","isPasswordValid","length","isConfirmValid","alertMessage","method","onSubmit","event","preventDefault","alert","htmlFor","value","type","placeholder","maxLength","onChange","e","target","required","id","name","onClick","src","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAKMA,EAAc,SAACC,GAAD,OAClB,sBAAMC,UAAU,eAAhB,SAAgCD,KAGrBE,EAAgB,WAC3B,IAYiCC,EAZjC,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA8CJ,mBAAS,IAAvD,mBAAOK,EAAP,KAAwBC,EAAxB,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAAwCR,oBAAS,GAAjD,mBAAOS,EAAP,KAAqBC,EAArB,KAqBMC,EAlBO,6GAEDC,KAgBwBX,GAC9BY,EAAkBV,EAASW,QAAU,EACrCC,GAf2BhB,EAecI,KAAUE,GAdR,IAAhBN,EAAKe,OAiBhCE,EAAY,kBAAcT,EAAd,sBAAiCN,EAAjC,yBAAuDE,GAEzE,OACE,sBAAKN,UAAU,MAAf,UACE,wBAAQA,UAAU,SAAlB,SACE,oBAAIA,UAAU,gBAAd,kCAGF,uBACEoB,OAAO,OACPpB,UAAU,OACVqB,SAAU,SAACC,GACTA,EAAMC,iBACFT,GAAgBE,GAAmBE,IAErCM,MAAML,GA5BdR,EAAS,IACTN,EAAS,IACTE,EAAY,IACZE,EAAmB,MAkBjB,UAaE,qBAAKT,UAAU,cAAf,SACE,wBAAOyB,QAAQ,qBAAqBzB,UAAU,aAA9C,kBAEE,uBACE0B,MAAOhB,EACPiB,KAAK,OACL3B,UAAU,eACV4B,YAAY,eACZC,UApCW,GAqCXC,SAAU,SAAAC,GAAC,OAAIpB,EAASoB,EAAEC,OAAON,QACjCO,UAAQ,SAKd,qBAAKjC,UAAU,cAAf,SACE,wBAAOyB,QAAQ,qBAAqBzB,UAAU,aAA9C,mBAEE,uBACE0B,MAAOtB,EACPuB,KAAK,QACL3B,UAAU,eACVkC,GAAG,qBACHN,YAAY,qBACZC,UAAW,GACXC,SAAU,SAAAC,GAAC,OAAI1B,EAAS0B,EAAEC,OAAON,QACjCO,UAAQ,IAERnB,GAAiC,IAAjBV,EAAMa,OAAgD,KAAjCnB,EAAY,wBAIvD,qBAAKE,UAAU,cAAf,SACE,wBAAOyB,QAAQ,gBAAgBzB,UAAU,aAAzC,4BAEE,uBACE0B,MAAOpB,EACPqB,KAAMf,EAAe,WAAa,OAClCuB,KAAK,WACLnC,UAAU,eACVkC,GAAG,gBACHL,UApEc,GAqEdC,SAAU,SAAAC,GAAC,OAAIxB,EAAYwB,EAAEC,OAAON,QACpCO,UAAQ,IAEV,wBACEN,KAAK,SACL3B,UAAU,6BACVoC,QAAS,kBAAMvB,GAAiBD,IAHlC,SAKE,qBAAKyB,IAAI,YAAYC,IAAI,mBAEzBtB,GAAuC,IAApBV,EAASW,OAAwE,KAAzDnB,EAAY,gDAI7D,qBAAKE,UAAU,cAAf,SACE,wBAAOyB,QAAQ,eAAezB,UAAU,aAAxC,6BAEE,uBACE0B,MAAOlB,EACPmB,KAAMf,EAAe,WAAa,OAClCZ,UAAU,eACVkC,GAAG,eACHL,UA3Fc,GA4FdC,SAAU,SAAAC,GAAC,OAAItB,EAAmBsB,EAAEC,OAAON,QAC3CO,UAAQ,IAEV,wBACEN,KAAK,SACL3B,UAAU,6BACVoC,QAAS,kBAAMvB,GAAiBD,IAHlC,SAKE,qBAAKyB,IAAI,YAAYC,IAAI,oBAExBpB,GAAsC,IAApBZ,EAASW,QAC3BX,EAASW,SAAWT,EAAgBS,OACnCnB,EAAY,8BAAgC,UAIpD,wBACE6B,KAAK,SACL3B,UAAWc,GAAgBE,GAAmBE,EAC1C,uBACA,uDAJN,2BCzIRqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.d69db68e.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState } from 'react';\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst renderError = (errorMessage: {} | null | undefined) => (\n  <span className=\"errorMessage\">{errorMessage}</span>\n);\n\nexport const App: React.FC = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n  const [login, setLogin] = useState('');\n  const [hidePassword, setHidePassword] = useState(true);\n\n  const emailValidator = (clientEmail: string) => {\n    const re = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\n\n    return re.test(clientEmail);\n  };\n\n  const confirmPasswordValidate = (pass: string, confirmPass: string) => {\n    return pass === confirmPass && pass.length !== 0;\n  };\n\n  const resetInput = () => {\n    setLogin('');\n    setEmail('');\n    setPassword('');\n    setPasswordConfirm('');\n  };\n\n  const loginMaxLength = 24;\n  const passwordMaxLength = 24;\n  const isEmailValid = emailValidator(email);\n  const isPasswordValid = password.length >= 6;\n  const isConfirmValid = confirmPasswordValidate(password, passwordConfirm);\n\n  // eslint-disable-next-line no-useless-concat\n  const alertMessage = `login : ${login} \\nemail : ${email} \\npassword : ${password}`;\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <h1 className=\"header__title\">Sign Up with email</h1>\n      </header>\n\n      <form\n        method=\"post\"\n        className=\"form\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          if (isEmailValid && isPasswordValid && isConfirmValid) {\n            // eslint-disable-next-line no-alert\n            alert(alertMessage);\n            resetInput();\n          }\n        }}\n      >\n\n        <div className=\"form__input\">\n          <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\n            Login\n            <input\n              value={login}\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Create login\"\n              maxLength={loginMaxLength}\n              onChange={e => setLogin(e.target.value)}\n              required\n            />\n          </label>\n        </div>\n\n        <div className=\"form__input\">\n          <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\n            E-mail\n            <input\n              value={email}\n              type=\"email\"\n              className=\"form-control\"\n              id=\"exampleInputEmail1\"\n              placeholder=\"johnsmith@mail.com\"\n              maxLength={25}\n              onChange={e => setEmail(e.target.value)}\n              required\n            />\n            {!isEmailValid && email.length !== 0 ? renderError('Email not valid') : null}\n          </label>\n        </div>\n\n        <div className=\"form__input\">\n          <label htmlFor=\"inputPassword\" className=\"form-label\">\n            Create Password\n            <input\n              value={password}\n              type={hidePassword ? 'password' : 'text'}\n              name=\"password\"\n              className=\"form-control\"\n              id=\"inputPassword\"\n              maxLength={passwordMaxLength}\n              onChange={e => setPassword(e.target.value)}\n              required\n            />\n            <button\n              type=\"button\"\n              className=\"form__button--showPassword\"\n              onClick={() => setHidePassword(!hidePassword)}\n            >\n              <img src=\"./eye.svg\" alt=\"showPassword\" />\n            </button>\n            {!isPasswordValid && password.length !== 0 ? renderError('Password not valid. Min length 6 symbol') : null}\n          </label>\n        </div>\n\n        <div className=\"form__input\">\n          <label htmlFor=\"inputConfirm\" className=\"form-label\">\n            Confirm Password\n            <input\n              value={passwordConfirm}\n              type={hidePassword ? 'password' : 'text'}\n              className=\"form-control\"\n              id=\"inputConfirm\"\n              maxLength={passwordMaxLength}\n              onChange={e => setPasswordConfirm(e.target.value)}\n              required\n            />\n            <button\n              type=\"button\"\n              className=\"form__button--showPassword\"\n              onClick={() => setHidePassword(!hidePassword)}\n            >\n              <img src=\"./eye.svg\" alt=\"showPassword\" />\n            </button>\n            {(!isConfirmValid && password.length !== 0)\n            || password.length !== passwordConfirm.length\n              ? renderError('Confirm password not valid') : null}\n          </label>\n        </div>\n\n        <button\n          type=\"submit\"\n          className={isEmailValid && isPasswordValid && isConfirmValid\n            ? 'form__button--singUp'\n            : 'form__button--singUp form__button--singUp--nonActive'}\n        >\n          Submit\n        </button>\n      </form>\n\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}